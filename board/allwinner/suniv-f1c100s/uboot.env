bootargs=console=ttyS1,115200n8 earlyprintk mtdparts=spi0.0:1m(u-boot),-(rootfs) ubi.mtd=1 root=ubi0:rootfs rootfstype=ubifs rw quiet systemd.gpt_auto=no systemd.log_color=off
bootargs_common=console=ttyS1,115200 rootwait consoleblank=0

mmc_kernel=kernel.itb
mmc_fdt=devicetree.dtb
mmc_ubootpart=1
mmc_bootpart=2
mmc_rootpart=3

stderr=serial
stdin=serial
stdout=serial
kernel_addr_r=0x80500000
fdt_addr_r=0x80C00000
bootm_size=0x1700000

boot_slot_0=empty
boot_slot_1=empty
scan_boot_slot_1=if mmc dev 1; then setenv boot_slot_1 mmc1; else if sf probe; then setenv boot_slot_1 spi-nor; else if mtd list; then setenv boot_slot_1 spi-nand; fi; fi; fi;
scan_boot_slot=run scan_boot_slot_1; echo "========================="; echo "Boot Device: ${boot_device}"; echo "Boot Slot 0: ${boot_slot_0}"; echo "Boot Slot 1: ${boot_slot_1}"; echo "========================="; 

dfu_wait_timeout=15
nand_dfu_info=all raw 0x0 0x8000000;u-boot raw 0x0 0x100000;rom raw 0x100000 0x8000000
dfu_nand=mtd list; setenv dfu_alt_info "${nand_dfu_info}"; dfu 0 mtd spi-nand0 ${dfu_wait_timeout};
dfu_boot=if test "${boot_slot_1}" = "spi-nand"; then echo "DFU waiting on SPI-NAND..."; run dfu_nand; fi;

flasher_ptr_counter=0x80000000
flasher_ptr_buffer=0x80000004
flasher_size_buffer=0x800000
flasher_nandimage=sysimage-nand.img
flasher_norimage=sysimage-nor.img
flash_nand=size mmc 0:${mmc_bootpart} ${flasher_nandimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; mtd erase spi-nand0; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_nandimage} ${flasher_size_buffer} ${flasher_offset}; mtd write spi-nand0 ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flash_nor=size mmc 0:${mmc_bootpart} ${flasher_norimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_norimage} ${flasher_size_buffer} ${flasher_offset}; sf update ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flasher_boot=if test -e mmc 0:${mmc_bootpart} ${flasher_norimage}; then if test "${boot_slot_1}" = "spi-nor"; then echo "Flashing SPI-NOR from MMC0..."; run flash_nor; run nor_boot; fi; fi; if test -e mmc 0:${mmc_bootpart} ${flasher_nandimage}; then if test "${boot_slot_1}" = "spi-nand"; then echo "Flashing SPI-NAND from MMC0..."; run flash_nand; run nand_boot; fi; fi;

genbootargs_fel=setenv bootargs ${bootargs_common} root=/dev/mmcblk0p3;
genbootargs_mmc=setenv bootargs ${bootargs_common} root=/dev/mmcblk0p3 rootfstype=ext4 rw systemd.gpt_auto=no systemd.log_color=off;

fel_boot=echo "Booting from FEL..."; rootdev=/dev/ram0; run genbootargs_fel; bootz ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r};
nand_boot=echo "Booting from SPI-NAND..."; ubi part rootfs; ubifsmount ubi0:rootfs; ubifsload ${kernel_addr_r} /boot/zImage; ubifsload ${fdt_addr_r} /boot/devicetree.dtb; bootz ${kernel_addr_r} - ${fdt_addr_r};
mmc_boot=mmc dev ${devnum}; echo "Booting from MMC${devnum}..."; run genbootargs_mmc; load mmc ${devnum}:${mmc_bootpart} ${kernel_addr_r} ${mmc_kernel}; bootm ${kernel_addr_r};

bootcmd_fel=if test "${boot_device}" = "fel"; then run fel_boot; fi;
bootcmd_flasher=if test "${boot_device}" = "mmc0"; then run flasher_boot; fi;
bootcmd_spi=if test "${boot_device}" = "spi"; then run nand_boot; fi;
bootcmd_mmc0=if test "${boot_device}" = "mmc0"; then devnum=0; run mmc_boot; fi;
bootcmd_mmc1=if test "${boot_device}" = "mmc1"; then devnum=1; run mmc_boot; fi;
bootcmd_dfu=if test "${boot_device}" = "dfu"; then run dfu_boot; if;

boot_targets=fel dfu mmc0 mmc1 flasher spi
bootcmd=run scan_boot_slot; for target in ${boot_targets}; do run bootcmd_${target}; done

mtdparts=spi-nand0:1m(u-boot),-(rootfs)
